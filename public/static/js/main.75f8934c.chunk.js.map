{"version":3,"sources":["context/appContext.js","types/types.js","components/navbar/navbar.js","components/posts/postsComponent.js","pages/homePage.js","components/login/loginForm.js","pages/loginPage.js","pages/usersPage.js","pages/categoriesPage.js","router/privateRoute.js","router/publicRoute.js","pages/postsPage.js","router/appRouter.js","auth/authReducer.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","types","NavBar","history","useHistory","useContext","user","logged","role","firstName","lastName","dispatch","className","id","exact","activeClassName","to","type","onClick","Swal","fire","title","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","replace","PostsComponent","useState","posts","setPosts","useEffect","headers","Accept","signal","AbortController","fetch","process","resp","json","data","length","map","post","Card","CardHeader","Typography","variant","align","toUpperCase","subheader","category","description","CardContent","component","paragraph","CardActions","disableSpacing","Date","createdAt","updatedAt","HomePage","LoginForm","email","password","formValues","setFormValues","handleInputChange","target","name","value","handleSubmit","e","a","preventDefault","requestOptions","method","body","JSON","stringify","status","msg","payload","uid","token","onSubmit","FormControl","fullWidth","required","InputLabel","htmlFor","Input","aria-describedby","onChange","FormHelperText","Button","color","LoginPage","API_URL","UsersPage","usersList","setUsersList","respDelete","setRespDelete","imEditing","setImEditing","isFormValid","showMessage","getUsers","resetForm","trim","validator","isEmail","message","text","timer","position","timerProgressBar","showConfirmButton","allowOutsideClick","dismiss","DismissReason","users","deleteUser","Select","labelId","MenuItem","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","IconButton","confirmButtonColor","cancelButtonColor","handleEditUser","CategoriesPage","categoriesList","setCategoriesList","getCategories","categories","deleteCategory","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","PostsPage","setPostsList","setCategories","getPosts","deletePost","TextField","label","multiline","rows","helperText","_id","handleEditPost","AppRouter","path","authReducer","state","action","init","parse","localStorage","getItem","App","useReducer","setItem","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75f8934c.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n","export const types = {\r\n  login: '[AUTH] LOGIN',\r\n  logout: '[AUTH] LOGOUT',\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { AppContext } from '../../context/appContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const NavBar = () => {\r\n  const history = useHistory();\r\n  const {\r\n    user: { logged, role, firstName, lastName },\r\n    dispatch,\r\n  } = useContext(AppContext);\r\n\r\n  const handleLogout = () => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes!',\r\n      cancelButtonText: 'Cancel',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch({\r\n          type: types.logout,\r\n        });\r\n        history.replace('/login');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n        <div className='container-fluid'>\r\n          <div className='navbar-brand'>\r\n            {logged ? `Welcome: ${firstName} ${lastName}` : ''}\r\n          </div>\r\n          <div className='collapse navbar-collapse' id='navbarNav'>\r\n            <ul className='navbar-nav ml-auto'>\r\n              <li className='nav-item'>\r\n                <NavLink\r\n                  exact\r\n                  activeClassName='active'\r\n                  className='nav-link '\r\n                  to='/'\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n\r\n              {!logged ? (\r\n                <li className='nav-item'>\r\n                  <NavLink\r\n                    exact\r\n                    activeClassName='active'\r\n                    className='nav-link '\r\n                    to='/login'\r\n                  >\r\n                    Login\r\n                  </NavLink>\r\n                </li>\r\n              ) : null}\r\n\r\n              {logged && role === 'admin' ? (\r\n                <li className='nav-item'>\r\n                  <NavLink\r\n                    exact\r\n                    activeClassName='active'\r\n                    className='nav-link '\r\n                    to='/users'\r\n                  >\r\n                    Users\r\n                  </NavLink>\r\n                </li>\r\n              ) : null}\r\n              {logged ? (\r\n                <li className='nav-item'>\r\n                  <NavLink\r\n                    exact\r\n                    activeClassName='active'\r\n                    className='nav-link '\r\n                    to='/categories'\r\n                  >\r\n                    Categories\r\n                  </NavLink>\r\n                </li>\r\n              ) : null}\r\n              {logged ? (\r\n                <li className='nav-item'>\r\n                  <NavLink\r\n                    exact\r\n                    activeClassName='active'\r\n                    className='nav-link '\r\n                    to='/posts'\r\n                  >\r\n                    Posts\r\n                  </NavLink>\r\n                </li>\r\n              ) : null}\r\n              {logged ? (\r\n                <li className='nav-item'>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-outline-warning'\r\n                    onClick={handleLogout}\r\n                  >\r\n                    Logout\r\n                  </button>\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\n\r\nexport const PostsComponent = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n      signal,\r\n    };\r\n    fetch(`${API_URL}/post`, headers)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        const { posts } = data;\r\n        setPosts(posts);\r\n      });\r\n  }, []);\r\n\r\n  return posts.length > 0 ? (\r\n    posts.map((post) => (\r\n      <div key={post.id}>\r\n        <br />\r\n        <Card>\r\n          <CardHeader\r\n            title={\r\n              <Typography\r\n                variant='h4'\r\n                align='center'\r\n              >{`${post.title.toUpperCase()}`}</Typography>\r\n            }\r\n            subheader={\r\n              <Typography>{`Category: ${post.category.description}`}</Typography>\r\n            }\r\n          />\r\n\r\n          <CardContent>\r\n            <Typography variant='body1' component='p' align='justify' paragraph>\r\n              {`${post.description}`}\r\n            </Typography>\r\n          </CardContent>\r\n\r\n          <CardActions disableSpacing>\r\n            <Typography variant='caption'>\r\n              {`By: ${post.user.firstName} ${post.user.lastName} `}\r\n              <br />\r\n              {`Created At: ${new Date(post.createdAt)}`}\r\n              <br />\r\n              {`Updated At: ${new Date(post.updatedAt)}`}\r\n            </Typography>\r\n          </CardActions>\r\n        </Card>\r\n        <br />\r\n      </div>\r\n    ))\r\n  ) : (\r\n    <div>\r\n      <h3>No Posts yet...!</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { NavBar } from '../components/navbar/navbar';\r\nimport { PostsComponent } from '../components/posts/postsComponent';\r\nexport const HomePage = () => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <br />\r\n      <div className='row'>\r\n        <div className='col-2'></div>\r\n        <div className='col-8'>\r\n          <PostsComponent />\r\n        </div>\r\n        <div className='col-2'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputLabel,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppContext } from '../../context/appContext';\r\nimport { types } from '../../types/types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\nexport const LoginForm = () => {\r\n  const history = useHistory();\r\n  const { dispatch } = useContext(AppContext);\r\n  const [formValues, setFormValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formValues),\r\n    };\r\n\r\n    const resp = await fetch(`${API_URL}/auth`, requestOptions);\r\n    const data = await resp.json();\r\n\r\n    if (resp.status !== 200) {\r\n      Swal.fire('Oops...', `${data.msg}`, 'error');\r\n    } else {\r\n      dispatch({\r\n        type: types.login,\r\n        payload: {\r\n          uid: data.uid,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          email: data.email,\r\n          role: data.role,\r\n          token: data.token,\r\n        },\r\n      });\r\n\r\n      history.replace('/');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <br />\r\n      <form onSubmit={handleSubmit}>\r\n        <Card>\r\n          <CardHeader title={`LOGIN`}></CardHeader>\r\n          <CardContent>\r\n            <FormControl fullWidth={true} required={true}>\r\n              <InputLabel htmlFor='email'>Email address</InputLabel>\r\n              <Input\r\n                id='email'\r\n                aria-describedby='my-helper-text'\r\n                type='email'\r\n                name='email'\r\n                value={email}\r\n                onChange={handleInputChange}\r\n              />\r\n              <FormHelperText id='my-helper-text'>\r\n                example@example.com\r\n              </FormHelperText>\r\n            </FormControl>\r\n            <FormControl fullWidth={true} required={true}>\r\n              <InputLabel htmlFor='password'>Password</InputLabel>\r\n              <Input\r\n                id='password'\r\n                type='password'\r\n                name='password'\r\n                value={password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n            <Button variant='contained' color='primary' type='submit'>\r\n              Login\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { NavBar } from '../components/navbar/navbar';\r\nimport { LoginForm } from '../components/login/loginForm';\r\n\r\nexport const LoginPage = () => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className='row'>\r\n        <div className='col-4'></div>\r\n        <div className='col-4'>\r\n          <LoginForm />\r\n        </div>\r\n        <div className='col-4'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport validator from 'validator';\r\nimport Swal from 'sweetalert2';\r\nimport { AppContext } from '../context/appContext';\r\nimport { NavBar } from '../components/navbar/navbar';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\nexport const UsersPage = () => {\r\n  const { user } = useContext(AppContext);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [respDelete, setRespDelete] = useState({});\r\n  const [imEditing, setImEditing] = useState(false);\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    role: 'editor',\r\n    id: '',\r\n  });\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleRoleChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      role: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      const requestOptions = {\r\n        method: !imEditing ? 'POST' : 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-token': `${user.token}`,\r\n        },\r\n        body: JSON.stringify(formValues),\r\n      };\r\n\r\n      if (!imEditing) {\r\n        const resp = await fetch(`${API_URL}/auth/new`, requestOptions);\r\n        const { msg } = await resp.json();\r\n\r\n        if (resp.status !== 201) {\r\n          showMessage('Error!', msg);\r\n        } else {\r\n          showMessage('Ok', 'User has been added');\r\n          getUsers();\r\n          resetForm();\r\n          setImEditing(false);\r\n        }\r\n      } else {\r\n        const { id } = formValues;\r\n        const resp = await fetch(`${API_URL}/auth/${id}`, requestOptions);\r\n\r\n        if (resp.status !== 200) {\r\n          showMessage('Error!', 'Error has occurred contact your admin');\r\n        } else {\r\n          showMessage('Ok', 'User has been edited');\r\n          getUsers();\r\n          resetForm();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (firstName.trim().length === 0 || firstName.trim().length < 3) {\r\n      showMessage('Error!', 'Write a valid name');\r\n      return false;\r\n    } else if (lastName.trim().length === 0 || lastName.trim().length < 3) {\r\n      showMessage('Error!', 'Write a valid Last name');\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      showMessage('Error!', 'email is not valid');\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      showMessage('Error!', 'password must be at least 6 characters');\r\n      return false;\r\n    } else if (role.trim().length === 0) {\r\n      showMessage('Error!', 'select role');\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const showMessage = (title, message) => {\r\n    Swal.fire({\r\n      title: title,\r\n      text: message,\r\n      timer: 2000,\r\n      position: 'bottom-right',\r\n      timerProgressBar: true,\r\n      showConfirmButton: false,\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      /* Read more about handling dismissals below */\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n      }\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormValues({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      role: '',\r\n      id: '',\r\n    });\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/auth`, requestOptions);\r\n    const { users } = await resp.json();\r\n\r\n    setUsersList(users);\r\n  };\r\n\r\n  const { firstName, lastName, email, role, password } = formValues;\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [respDelete]);\r\n\r\n  const handleDeleteUser = (id) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteUser(id);\r\n        Swal.fire('Deleted!', respDelete.msg, 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteUser = async (id) => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/auth/${id}`, requestOptions);\r\n    const data = await resp.json();\r\n    setRespDelete(data);\r\n  };\r\n\r\n  const handleEditUser = (user) => {\r\n    setFormValues(user);\r\n    setImEditing(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className='row'>\r\n        <div className='col-4'>\r\n          <form onSubmit={handleSubmit}>\r\n            <Card>\r\n              <CardHeader\r\n                title={imEditing ? 'Edit User' : 'Add User '}\r\n              ></CardHeader>\r\n              <CardContent>\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel htmlFor='firstName'>First Name</InputLabel>\r\n                  <Input\r\n                    id='firstName'\r\n                    aria-describedby='my-helper-text'\r\n                    type='firstName'\r\n                    name='firstName'\r\n                    value={firstName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel htmlFor='lastName'>Last Name</InputLabel>\r\n                  <Input\r\n                    id='lastName'\r\n                    aria-describedby='my-helper-text'\r\n                    type='lastName'\r\n                    name='lastName'\r\n                    value={lastName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel htmlFor='email'>Email</InputLabel>\r\n                  <Input\r\n                    id='email'\r\n                    aria-describedby='my-helper-text'\r\n                    type='email'\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel htmlFor='password'>Password</InputLabel>\r\n                  <Input\r\n                    type='password'\r\n                    id='password'\r\n                    aria-describedby='my-helper-text'\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel id='role'>Role</InputLabel>\r\n                  <Select\r\n                    labelId='role'\r\n                    id='role'\r\n                    value={role}\r\n                    onChange={handleRoleChange}\r\n                  >\r\n                    <MenuItem value={'admin'}>Admin</MenuItem>\r\n                    <MenuItem value={'editor'}>Editor</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                &nbsp;\r\n                <Button variant='contained' color='primary' type='submit'>\r\n                  {imEditing ? 'Edit' : 'Save'}\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </form>\r\n        </div>\r\n        <div className='col-8'>\r\n          <TableContainer>\r\n            <Table aria-label='users table'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>First Name</TableCell>\r\n                  <TableCell>Last Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Role</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {usersList.length === 0 ? (\r\n                  <TableRow>\r\n                    <TableCell>No data</TableCell>\r\n                    <TableCell>No data</TableCell>\r\n                    <TableCell>No data</TableCell>\r\n                    <TableCell>No data</TableCell>\r\n                    <TableCell>No data</TableCell>\r\n                  </TableRow>\r\n                ) : (\r\n                  usersList.map((row) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell component='th' scope='row'>\r\n                        {row.firstName}\r\n                      </TableCell>\r\n                      <TableCell>{row.lastName}</TableCell>\r\n                      <TableCell>{row.email}</TableCell>\r\n                      <TableCell>{row.role}</TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          aria-label='delete'\r\n                          onClick={() => handleDeleteUser(row.id)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          aria-label='edit'\r\n                          onClick={() => handleEditUser(row)}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Swal from 'sweetalert2';\r\nimport { AppContext } from '../context/appContext';\r\nimport { NavBar } from '../components/navbar/navbar';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\nexport const CategoriesPage = () => {\r\n  const { user } = useContext(AppContext);\r\n  const [categoriesList, setCategoriesList] = useState([]);\r\n  const [respDelete, setRespDelete] = useState({});\r\n  const [imEditing, setImEditing] = useState(false);\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    description: '',\r\n    id: '',\r\n  });\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      const requestOptions = {\r\n        method: !imEditing ? 'POST' : 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-token': `${user.token}`,\r\n        },\r\n        body: JSON.stringify(formValues),\r\n      };\r\n\r\n      if (!imEditing) {\r\n        const resp = await fetch(`${API_URL}/category`, requestOptions);\r\n        const { msg } = await resp.json();\r\n\r\n        if (resp.status !== 201) {\r\n          showMessage('Error!', msg);\r\n        } else {\r\n          showMessage('Ok', 'Category has been added');\r\n          getCategories();\r\n          resetForm();\r\n          setImEditing(false);\r\n        }\r\n      } else {\r\n        const { id } = formValues;\r\n        const resp = await fetch(`${API_URL}/category/${id}`, requestOptions);\r\n\r\n        if (resp.status !== 200) {\r\n          showMessage('Error!', 'Error has occurred contact your admin');\r\n        } else {\r\n          showMessage('Ok', 'Category has been edited');\r\n          getCategories();\r\n          resetForm();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (description.trim().length === 0 || description.trim().length < 3) {\r\n      showMessage('Error!', 'Write a valid description');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const showMessage = (title, message) => {\r\n    Swal.fire({\r\n      title: title,\r\n      text: message,\r\n      timer: 2000,\r\n      position: 'bottom-right',\r\n      timerProgressBar: true,\r\n      showConfirmButton: false,\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      /* Read more about handling dismissals below */\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n      }\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormValues({\r\n      description: '',\r\n      id: '',\r\n    });\r\n  };\r\n\r\n  const getCategories = async () => {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/category`, requestOptions);\r\n    const { categories } = await resp.json();\r\n\r\n    setCategoriesList(categories);\r\n  };\r\n\r\n  const { description } = formValues;\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, [respDelete]);\r\n\r\n  const handleDeleteCategory = (id) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteCategory(id);\r\n        Swal.fire('Deleted!', respDelete.msg, 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCategory = async (id) => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/category/${id}`, requestOptions);\r\n    const data = await resp.json();\r\n    setRespDelete(data);\r\n  };\r\n\r\n  const handleEditCategory = (category) => {\r\n    setFormValues(category);\r\n    setImEditing(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <br />\r\n      <div className='row'>\r\n        <div className='col-4'>\r\n          <form onSubmit={handleSubmit}>\r\n            <Card>\r\n              <CardHeader\r\n                title={imEditing ? 'Edit Category' : 'Add Category'}\r\n              ></CardHeader>\r\n              <CardContent>\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel htmlFor='description'>Description</InputLabel>\r\n                  <Input\r\n                    id='description'\r\n                    aria-describedby='my-helper-text'\r\n                    type='description'\r\n                    name='description'\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n\r\n                <Button variant='contained' color='primary' type='submit'>\r\n                  {imEditing ? 'Edit' : 'Save'}\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </form>\r\n        </div>\r\n        <div className='col-8'>\r\n          <TableContainer>\r\n            <Table aria-label='users table'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Description</TableCell>\r\n                  <TableCell>User</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {categoriesList.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component='th' scope='row'>\r\n                      {row.description}\r\n                    </TableCell>\r\n\r\n                    <TableCell>{`${row.user.firstName} ${row.user.lastName}`}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label='delete'\r\n                        onClick={() => handleDeleteCategory(row.id)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        aria-label='edit'\r\n                        onClick={() => handleEditCategory(row)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = (\r\n  { isAuthenticated, component: Component },\r\n  ...rest\r\n) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Swal from 'sweetalert2';\r\nimport { AppContext } from '../context/appContext';\r\nimport { NavBar } from '../components/navbar/navbar';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '';\r\nexport const PostsPage = () => {\r\n  const { user } = useContext(AppContext);\r\n  const [posts, setPostsList] = useState([]);\r\n  const [respDelete, setRespDelete] = useState({});\r\n  const [imEditing, setImEditing] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [formValues, setFormValues] = useState({\r\n    title: '',\r\n    description: '',\r\n    category: '',\r\n    id: '',\r\n  });\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      const requestOptions = {\r\n        method: !imEditing ? 'POST' : 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-token': `${user.token}`,\r\n        },\r\n        body: JSON.stringify(formValues),\r\n      };\r\n\r\n      if (!imEditing) {\r\n        const resp = await fetch(`${API_URL}/post`, requestOptions);\r\n        const { msg } = await resp.json();\r\n\r\n        if (resp.status !== 201) {\r\n          showMessage('Error!', msg);\r\n        } else {\r\n          showMessage('Ok', 'Post has been added');\r\n          getPosts();\r\n          resetForm();\r\n          setImEditing(false);\r\n        }\r\n      } else {\r\n        const { id } = formValues;\r\n        const resp = await fetch(`${API_URL}/post/${id}`, requestOptions);\r\n\r\n        if (resp.status !== 200) {\r\n          showMessage('Error!', 'Error has occurred contact your admin');\r\n        } else {\r\n          showMessage('Ok', 'Post has been edited');\r\n          getPosts();\r\n          resetForm();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (title.trim().length === 0 || title.trim().length < 3) {\r\n      showMessage('Error!', 'Write a valid title');\r\n      return false;\r\n    } else if (category.trim().length === 0) {\r\n      showMessage('Error!', 'Select a valid category');\r\n      return false;\r\n    } else if (\r\n      description.trim().length === 0 ||\r\n      description.trim().length < 50\r\n    ) {\r\n      showMessage('Error!', 'Write a valid description');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const showMessage = (title, message) => {\r\n    Swal.fire({\r\n      title: title,\r\n      text: message,\r\n      timer: 2000,\r\n      position: 'bottom-right',\r\n      timerProgressBar: true,\r\n      showConfirmButton: false,\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      /* Read more about handling dismissals below */\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n      }\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormValues({\r\n      title: '',\r\n      description: '',\r\n      category: '',\r\n      id: '',\r\n    });\r\n  };\r\n\r\n  const getPosts = async () => {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/post`, requestOptions);\r\n    const { posts } = await resp.json();\r\n\r\n    setPostsList(posts);\r\n  };\r\n\r\n  const getCategories = async () => {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/category`, requestOptions);\r\n    const { categories } = await resp.json();\r\n\r\n    setCategories(categories);\r\n  };\r\n\r\n  const { title, description, category } = formValues;\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [respDelete]);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const handleDeletePost = (id) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deletePost(id);\r\n        Swal.fire('Deleted!', respDelete.msg, 'success');\r\n      }\r\n    });\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': `${user.token}`,\r\n      },\r\n    };\r\n    const resp = await fetch(`${API_URL}/post/${id}`, requestOptions);\r\n    const data = await resp.json();\r\n    setRespDelete(data);\r\n  };\r\n\r\n  const handleEditPost = ({ id, title, description, category: { _id } }) => {\r\n    setFormValues({\r\n      id,\r\n      title,\r\n      description,\r\n      category: _id,\r\n    });\r\n    setImEditing(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <br />\r\n      <div className='row'>\r\n        <div className='col-4'>\r\n          <form onSubmit={handleSubmit}>\r\n            <Card>\r\n              <CardHeader\r\n                title={imEditing ? 'Edit Post' : 'Add Post'}\r\n              ></CardHeader>\r\n              <CardContent>\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel htmlFor='description'>title</InputLabel>\r\n                  <Input\r\n                    id='title'\r\n                    aria-describedby='my-helper-text'\r\n                    type='text'\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <FormControl fullWidth={true} required={true}>\r\n                  <InputLabel id='category'>Category</InputLabel>\r\n                  <Select\r\n                    labelId='category'\r\n                    id='category'\r\n                    value={category}\r\n                    onChange={handleInputChange}\r\n                    name='category'\r\n                  >\r\n                    {categories.map((category) => (\r\n                      <MenuItem key={category.id} value={category.id}>\r\n                        {category.description}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <TextField\r\n                  id='description'\r\n                  label='Description'\r\n                  required={true}\r\n                  type='text'\r\n                  name='description'\r\n                  value={description}\r\n                  onChange={handleInputChange}\r\n                  multiline\r\n                  rows={7}\r\n                  fullWidth\r\n                  helperText='min 50 characters.'\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button variant='contained' color='primary' type='submit'>\r\n                  {imEditing ? 'Edit' : 'Save'}\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </form>\r\n        </div>\r\n        <div className='col-8'>\r\n          <TableContainer>\r\n            <Table aria-label='users table'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Category</TableCell>\r\n                  <TableCell>User</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {posts.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component='th' scope='row'>\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell>{`${row.category.description}`}</TableCell>\r\n                    <TableCell>{`${row.user.firstName} ${row.user.lastName}`}</TableCell>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label='delete'\r\n                        onClick={() => handleDeletePost(row.id)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        aria-label='edit'\r\n                        onClick={() => handleEditPost(row)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { HomePage } from '../pages/homePage';\r\nimport { LoginPage } from '../pages/loginPage';\r\nimport { UsersPage } from '../pages/usersPage';\r\nimport { CategoriesPage } from '../pages/categoriesPage';\r\nimport { PrivateRoute } from './privateRoute';\r\nimport { AppContext } from '../context/appContext';\r\nimport { PublicRoute } from './publicRoute';\r\nimport { PostsPage } from '../pages/postsPage';\r\n\r\nexport const AppRouter = () => {\r\n  const { user } = useContext(AppContext);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path='/login'\r\n            component={LoginPage}\r\n            isAuthenticated={user.logged}\r\n          />\r\n          {user.role === 'admin' ? (\r\n            <PrivateRoute\r\n              exact\r\n              path='/users'\r\n              component={UsersPage}\r\n              isAuthenticated={user.logged}\r\n            />\r\n          ) : null}\r\n          <PrivateRoute\r\n            exact\r\n            path='/categories'\r\n            component={CategoriesPage}\r\n            isAuthenticated={user.logged}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path='/posts'\r\n            component={PostsPage}\r\n            isAuthenticated={user.logged}\r\n          />\r\n          <Route exact path='/' component={HomePage} />\r\n          {/* <Route exact path='/students' component={StudentsPage} />\r\n          <Route exact path='/detail/:id' component={DetailPage} />\r\n          <Route exact path='/edit/:id' component={EditPage} /> */}\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...action.payload,\r\n        logged: true,\r\n      };\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AppRouter } from './router/appRouter';\nimport './App.css';\nimport { AppContext } from './context/appContext';\nimport React, { useReducer, useEffect } from 'react';\nimport { authReducer } from './auth/authReducer';\n\nconst init = () => {\n  return (\n    JSON.parse(localStorage.getItem('user')) || {\n      logged: false,\n    }\n  );\n};\n\nfunction App() {\n  const [user, dispatch] = useReducer(authReducer, {}, init);\n\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(user));\n  }, [user]);\n\n  return (\n    <AppContext.Provider value={{ user, dispatch }}>\n      <AppRouter />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}